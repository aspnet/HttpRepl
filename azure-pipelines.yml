variables:
- template: /eng/common/templates-official/variables/pool-providers.yml@self
- name: Build.Repository.Clean
  value: true
- name: _TeamName
  value: AspNetCore
- name: TeamName
  value: AspNetCore
- name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
  value: true
- name: _PublishUsingPipelines
  value: true
- name: _HelixType
  value: build/product
- name: _HelixSource
  value: official/dotnet/HttpRepl/$(Build.SourceBranch)
- name: _BuildConfig
  value: Release
- name: _SignType
  value: real
- name: _BuildArgs
  value: /p:DotNetSignType=$(_SignType) /p:TeamName=$(_TeamName) /p:OfficialBuildId=$(Build.BuildNumber)
- name: _HelixBuildConfig
  value: $(_BuildConfig)
resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
trigger:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - /
    exclude:
    - CONTRIBUTING.md
    - README.md
    - SECURITY.md
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: 1es-windows-2022
        os: windows
      codeSignValidation:
        # We make copies of our pre-signed binaries to the output directory, but we do not ship those. The signed ones
        # are in the packages folder and pass CSV without issue. We only ship the signed packages, not any individual binaries
        additionalTargetsGlobPattern: -|**\bin\**
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          artifacts:
            publish:
              artifacts: true
          enablePublishBuildArtifacts: true
          testResultsFormat: xunit
          enableTelemetry: true
          helixRepo: dotnet/HttpRepl
          enableMicrobuild: true
          jobs:
          - job: Windows
            pool:
              name: $(DncEngInternalBuildPool)
              image: 1es-windows-2022
              os: windows
            steps:
            - checkout: self
              clean: true
            - task: NuGetCommand@2
              displayName: 'Clear NuGet caches'
              condition: succeeded()
              inputs:
                command: custom
                arguments: 'locals all -clear'
            - script: eng\common\cibuild.cmd -configuration $(_BuildConfig) -prepareMachine -integrationTest $(_BuildArgs) /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
              name: Build
              displayName: Build
              condition: succeeded()
